name: ci-registry

env:
  KUBECONFIG: ./kubeconfig.yaml
  SERVICE_PATH: 'src/cloudservices/registry'
  SERVICE_NAME: 'registry'

on:
  push:
    branches:
      - 'test'
    paths:
      - .github/workflows/registry.yml
      - 'src/cloudservices/registry/**'

jobs:
  build-push:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          build-args: |
            "PACKAGE_TOKEN=${{secrets.PACKAGE_TOKEN}}"
          context: "{{defaultContext}}:${{ env.SERVICE_PATH }}"
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{  secrets.RANCHER_NAMESPACE }}-${{ env.SERVICE_NAME }}:v1
      - 
        name: Install Rancher CLI
        run: |
          curl -LO https://github.com/rancher/cli/releases/download/v2.7.0/rancher-linux-amd64-v2.7.0.tar.gz
          tar -xzvf rancher-linux-amd64-v2.7.0.tar.gz
          sudo mv rancher-v2.7.0/rancher /usr/local/bin/
          
      - name: Configure kubectl
        run: |
          rancher login ${{ secrets.RANCHER_SERVER_URL }} --skip-verify --token ${{ secrets.RANCHER_ACCESS_KEY }}:${{ secrets.RANCHER_SECRET_KEY }} --context c-m-jhhmfvcc:p-zx5tp
          rancher kubectl config view --raw > ${{ env.KUBECONFIG }}
          rancher kubectl config use-context ${{ secrets.RANCHER_CLUSTER_CONTEXT }}
          rancher kubectl config set-context --current --namespace ${{  secrets.RANCHER_NAMESPACE }}
      
      - name: Deploy
        run: |
          kubectl patch deployment rc-${{  env.SERVICE_NAME }} -n ${{  secrets.RANCHER_NAMESPACE }} -p "{\"spec\": {\"template\": {\"metadata\": { \"labels\": {  \"redeploy\": \"$(date +%s)\"}}}}}"

